1.
#run.analysis.R

2.
#script to complete Course project for Getting and Cleaning Data

3.
#

4.
# bring in required packages

5.
 

6.
library(data.table)

7.
library(dplyr)

8.
 

9.
 

10.
#get data into 1 data table

11.
# Assumption- your data are in the current directory

12.
# you may change the dataDIR variable to match your environment

13.
#  for linux/macos= use forward slashes "/"

14.
 

15.
dataDIR="UCI HAR Dataset"

16.
 

17.
setwd(dataDIR)

18.
# get list of measures and labels for the activities

19.
features=readLines("features.txt")

20.
act_labels=read.table("activity_labels.txt")

21.
 

22.
#get test data

23.
setwd("test")

24.
x_test=read.table("X_test.txt")

25.
y_test=read.table("Y_test.txt")

26.
subject_test=read.table("subject_test.txt")

27.
 

28.
#get training data

29.
setwd("..")

30.
setwd("train")

31.
y_train=read.table("Y_train.txt")

32.
x_train=read.table("X_train.txt")

33.
subject_train=read.table("subject_train.txt")

34.
 

35.
# combine into 1 dataset

36.
 

37.
x_test=as.data.table(x_test)

38.
y_test=as.data.table(y_test)

39.
x_train=as.data.table(x_train)

40.
y_train=as.data.table(y_train)

41.
dt = rbind(x_train, x_test)

42.
 

43.
# add columns for Subject and Activity

44.
subject_test=as.data.table(subject_test)

45.
subject_train=as.data.table(subject_train)

46.
Subject =  rbind(subject_train, subject_test)

47.
Activity = rbind(y_train, y_test)

48.
 

49.
 

50.
# Convert Activity numbers to Descriptions, but first add column label so mutate works

51.
setnames(Activity, names(Activity), "Activity")

52.
Activity_labels=mutate(Activity,Activity=factor(Activity,labels=act_labels[,2]))

53.
 

54.
# add column names for data to make them R compliant and more readable

55.
feature_labels= make.names(features)

56.
feature_labels=gsub("^X[0-9][0-9]*.","",feature_labels)

57.
feature_labels=gsub("tBody","timeBody",feature_labels)

58.
feature_labels=gsub("tGravity","timeGravity",feature_labels)

59.
feature_labels=gsub("fBody","frequencyBody",feature_labels)

60.
 

61.
setnames(dt, names(dt), feature_labels)

62.
setnames(Subject, names(Subject), "Subject")

63.
 

64.
 

65.
#select only measures with Mean or std

66.
 

67.
dtMean=select(dt,contains("Mean",ignore.case=TRUE))

68.
dtstd=select(dt,contains("std"))

69.
 

70.
dtFinal=cbind(dtMean,dtstd)

71.
 

72.
#merge the subject and activity columns with the data (dtFinal)

73.
 

74.
dtFinal=cbind(Subject,Activity_labels, dtFinal)

75.
 

76.
 

77.
# group by Subject and Activity and summarise (take the mean)

78.
dtFinal = arrange(dtFinal,Subject)

79.
dtGroup = group_by(dtFinal,Subject,Activity)

80.
dtSummary = summarise_each(dtGroup,funs(mean))

81.
 

82.
# return to the top level directory above our dataset to write the final datasets

83.
# use 2 steps to avoid having to decide if we are single forward slash or double backslash

84.
setwd("..")

85.
setwd("..")

86.
 

87.
#write out the dataset

88.
write.table(dtSummary,file="dtSummary.txt", row.name=F)

89.
write.table(dtFinal,file="dtFinal.txt", row.name=F)

90.
print("Tidy dataset with data on mean and std is in dtFinal.txt")

91.
print("Tidy dataset containing summarized means for each subject by activity is in dtSummary.txt")

92.
 

93.
# end


####################################################################3


#run.analysis.R
#script to complete Course project for Getting and Cleaning Data
#
# bring in required packages

library(data.table)
library(dplyr)


#get data into 1 data table
# Assumption- your data are in the current directory
# you may change the dataDIR variable to match your environment
#  for linux/macos= use forward slashes "/"

dataDIR="UCI HAR Dataset"

setwd(dataDIR)
# get list of measures and labels for the activities
features=readLines("features.txt")
act_labels=read.table("activity_labels.txt")

#get test data
setwd("test")
x_test=read.table("X_test.txt")
y_test=read.table("Y_test.txt")
subject_test=read.table("subject_test.txt")

#get training data
setwd("..")
setwd("train")
y_train=read.table("Y_train.txt")
x_train=read.table("X_train.txt")
subject_train=read.table("subject_train.txt")

# combine into 1 dataset

x_test=as.data.table(x_test)
y_test=as.data.table(y_test)
x_train=as.data.table(x_train)
y_train=as.data.table(y_train)
dt = rbind(x_train, x_test)

# add columns for Subject and Activity
subject_test=as.data.table(subject_test)
subject_train=as.data.table(subject_train)
Subject =  rbind(subject_train, subject_test)
Activity = rbind(y_train, y_test)


# Convert Activity numbers to Descriptions, but first add column label so mutate works
setnames(Activity, names(Activity), "Activity")
Activity_labels=mutate(Activity,Activity=factor(Activity,labels=act_labels[,2]))

# add column names for data to make them R compliant and more readable
feature_labels= make.names(features)
feature_labels=gsub("^X[0-9][0-9]*.","",feature_labels)
feature_labels=gsub("tBody","timeBody",feature_labels)
feature_labels=gsub("tGravity","timeGravity",feature_labels)
feature_labels=gsub("fBody","frequencyBody",feature_labels)

setnames(dt, names(dt), feature_labels)
setnames(Subject, names(Subject), "Subject")


#select only measures with Mean or std

dtMean=select(dt,contains("Mean",ignore.case=TRUE))
dtstd=select(dt,contains("std"))

dtFinal=cbind(dtMean,dtstd)

#merge the subject and activity columns with the data (dtFinal)

dtFinal=cbind(Subject,Activity_labels, dtFinal)


# group by Subject and Activity and summarise (take the mean)
dtFinal = arrange(dtFinal,Subject)
dtGroup = group_by(dtFinal,Subject,Activity)
dtSummary = summarise_each(dtGroup,funs(mean))

# return to the top level directory above our dataset to write the final datasets
# use 2 steps to avoid having to decide if we are single forward slash or double backslash
setwd("..")
setwd("..")

#write out the dataset
write.table(dtSummary,file="dtSummary.txt", row.name=F)
write.table(dtFinal,file="dtFinal.txt", row.name=F)
print("Tidy dataset with data on mean and std is in dtFinal.txt")
print("Tidy dataset containing summarized means for each subject by activity is in dtSummary.txt")

# end

#####################################################################
setwd("~/datascience/3. Obtaining Data/Project/") 
2 training = read.csv("UCI HAR Dataset/train/X_train.txt", sep="", header=FALSE) 
3 training[,562] = read.csv("UCI HAR Dataset/train/Y_train.txt", sep="", header=FALSE) 
4 training[,563] = read.csv("UCI HAR Dataset/train/subject_train.txt", sep="", header=FALSE) 
5 
 
6 testing = read.csv("UCI HAR Dataset/test/X_test.txt", sep="", header=FALSE) 
7 testing[,562] = read.csv("UCI HAR Dataset/test/Y_test.txt", sep="", header=FALSE) 
8 testing[,563] = read.csv("UCI HAR Dataset/test/subject_test.txt", sep="", header=FALSE) 
9 
 
10 activityLabels = read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE) 
11 
 
12 # Read features and make the feature names better suited for R with some substitutions 
13 features = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE) 
14 features[,2] = gsub('-mean', 'Mean', features[,2]) 
15 features[,2] = gsub('-std', 'Std', features[,2]) 
16 features[,2] = gsub('[-()]', '', features[,2]) 
17 
 
18 # Merge training and test sets together 
19 allData = rbind(training, testing) 
20 
 
21 # Get only the data on mean and std. dev. 
22 colsWeWant <- grep(".*Mean.*|.*Std.*", features[,2]) 
23 # First reduce the features table to what we want 
24 features <- features[colsWeWant,] 
25 # Now add the last two columns (subject and activity) 
26 colsWeWant <- c(colsWeWant, 562, 563) 
27 # And remove the unwanted columns from allData 
28 allData <- allData[,colsWeWant] 
29 # Add the column names (features) to allData 
30 colnames(allData) <- c(features$V2, "Activity", "Subject") 
31 colnames(allData) <- tolower(colnames(allData)) 
32 
 
33 currentActivity = 1 
34 for (currentActivityLabel in activityLabels$V2) { 
35   allData$activity <- gsub(currentActivity, currentActivityLabel, allData$activity) 
36   currentActivity <- currentActivity + 1 
37 } 
38 
 
39 allData$activity <- as.factor(allData$activity) 
40 allData$subject <- as.factor(allData$subject) 
41 
 
42 tidy = aggregate(allData, by=list(activity = allData$activity, subject=allData$subject), mean) 
43 # Remove the subject and activity column, since a mean of those has no use 
44 tidy[,90] = NULL 
45 tidy[,89] = NULL 
46 write.table(tidy, "tidy.txt", sep="\t") 
